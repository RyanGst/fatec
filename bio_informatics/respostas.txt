#  Make an algorithm that reads an integer and writes its predecessor and successor
number = int(input("Enter a number: "))

print("The number you entered was", number, "and its predecessor is", number - 1, "and its successor is", number + 1)#  Read a measurement in inches and print the equivalent in centimeters, knowing that 254 cm is equal to 1 inch

number = int(input("Enter a measurement in inches: "))
 
print("The measurement you entered was", number, "and its equivalent in centimeters is", number * 2.54)#  Make an algorithm that takes the base salary of an employee, calculates and writes the amount of the increase, the new salary and the percentage of the increase
base_salary = float(input("Enter the base salary: "))
percentage_increase = float(input("Enter the percentage of the increase: "))
increase = base_salary * (percentage_increase / 100)
new_salary = base_salary + increase
print("The amount of the increase is", increase, "the new salary is", new_salary, "and the percentage of the increase is", percentage_increase)
#  Make an algorithm that takes a person's year of birth and current year, calculates and writes the person's age
#  calculates and displays: 
# a) the current age of that person 
# b) how old will she be in 2018

year_of_birth = int(input("Enter the year of birth: "))
current_year = int(input("Enter the current year: "))
age = current_year - year_of_birth
print("The person's age is", age)# Make an algorithm to read two numbers and print if they are equal or not

n1 = int(input('Type a number: '))
n2 = int(input('Type another number: '))

if n1 == n2:
    print('They are equal')# A store provides 10% off for employees and 5% off for VIP customers
# Make a program that calculates the total amount to be paid by a person 
# The program should read the total value of the purchase made and a code that identifies whether the buyer is a regular customer (1), employee (2) or VIP (3)

# The program should print the total amount to be paid and the discount amount

# Example:
# Total value: 100
# Customer type: 2
# Total to be paid: 90
# Discount: 10

# Total value: 100
# Customer type: 3
# Total to be paid: 95
# Discount: 5


# Solution
# The program should read the total value of the purchase made and a code that identifies whether the buyer is a regular customer (1), employee (2) or VIP (3)
total_value = float(input('Total value: '))
customer_type = int(input('Customer type: '))

# The program should print the total amount to be paid and the discount amount
if customer_type == 1:
    discount = 0
elif customer_type == 2:
    discount = 10
elif customer_type == 3:
    discount = 5
else:
    discount = 0

total_to_be_paid = total_value - (total_value * discount / 100)
print(f'Total to be paid: {total_to_be_paid:.2f}')
print(f'Discount: {discount}')
# Write a python program to read an integer and tell if it is divisible by 5
# 
#  Example:
#  Number: 15
#  It is divisible by 5 ]

# Solution
# Read an integer
number = int(input('Number: '))

# Tell if it is divisible by 5
if number % 5 == 0:
    print('It is divisible by 5')
else:
    print('It is not divisible by 5')#  The city hall of Rio de Janeiro opened a line of credit for statutory employees The maximum amount of the benefit cannot exceed 30% of the gross salary Create an algorithm that allows you to enter the gross salary and the amount of the installment and inform whether or not the loan can be granted
# 
# Example:
# Gross salary: 1000
# Installment value: 300
# The loan can be granted
# 
# Gross salary: 1000
# Installment value: 400
# The loan cannot be granted
# 
# 
# Solution
# The city hall of Rio de Janeiro opened a line of credit for statutory employees The maximum amount of the benefit cannot exceed 30% of the gross salary Create an algorithm that allows you to enter the gross salary and the amount of the installment and inform whether or not the loan can be granted
gross_salary = float(input('Gross salary: '))
installment_value = float(input('Installment value: '))
 
# The maximum amount of the benefit cannot exceed 30% of the gross salary
max_amount = gross_salary * 30 / 100
 
# Create an algorithm that allows you to enter the gross salary and the amount of the installment and inform whether or not the loan can be granted
if installment_value <= max_amount:
    print('The loan can be granted')
else:
    print('The loan cannot be granted')
    #  A company will grant a salary increase to its employees, which varies according to the position, as shown in the table below Make an algorithm that reads an employee's salary and job title (by code) and calculates the new salary If the employee's job title is not on the table, then the employee should receive a 40% raise Show the old salary, the new salary and the difference
# 
# Job code 	Job title 	Salary increase
# 1 	Manager 	10%
# 2 	Supervisor 	15%
# 3 	Officer 	20%
# 4 	Worker 	40%
# 
# 
# Example:
# Salary: 1000
# Job code: 1
# Old salary: 1000
# New salary: 1100
# Salary increase: 100
# 
# Salary: 1000
# Job code: 5
# Old salary: 1000
# New salary: 1400
# Salary increase: 400
# 
# 
# Solution
# A company will grant a salary increase to its employees, which varies according to the position, as shown in the table below Make an algorithm that reads an employee's salary and job title (by code) and calculates the new salary If the employee's job title is not on the table, then the employee should receive a 40% raise Show the old salary, the new salary and the difference
salary = float(input('Salary: '))
job_code = int(input('Job code: '))
 
# Job code 	Job title 	Salary increase
# 1 	Manager 	10%
# 2 	Supervisor 	15%
# 3 	Officer 	20%
# 4 	Worker 	40%

if job_code == 1:
    salary_increase = 10
elif job_code == 2:
    salary_increase = 15
elif job_code == 3:
    salary_increase = 20
elif job_code == 4:
    salary_increase = 40
else:
    salary_increase = 40
    # Write a program for the user to inform the salary received and the total amount spent 
# It should be displayed on the screen “Expenses within budget” if the amount spent does not exceed the salary amount and “Budget overrun” if the amount spent exceeds the salary amount.

salary = int(input("Enter your salary: "))
expenses = int(input("Enter your expenses: "))

if expenses > salary:
    print("Budget overrun")
else:
    print("Expenses within budget")# Make the algorithm that reads the value of an electricity bill (CL)
# and, if the value is greater than R$ 15000, display the message:
# “You are spending too much” Otherwise, display the message: “Your spending was normal”
# 
# bill = float(input('Type the value of your electricity bill: '))
# 
# if bill > 15000:
#     print('You are spending too much')
# else:
#     print('Your spending was normal')

bill = float(input('Type the value of your electricity bill: '))

if bill > 15000:
    print('You are spending too much')
else:
    print('Your spending was normal')
    
# Read an employee's name, salary and category,
# if the category is equal to "m" of monthly pay, grant 10% increase,
# if equal to "h" of hourly, grant 20% increase,
# if not " m” or “h”, display the message Invalid category.
# Display the employee's name and new salary.

name = input('Type your name: ')
salary = float(input('Type your salary: '))
category = input('Type your category: ')

if category == 'm':
    salary = salary * 1.1
elif category == 'h':
    salary = salary * 1.2
else:
    print('Invalid category')

    #  Display the numbers 1 through 50 on the screen, one number per line.

for i in range(1, 51):
    print(i)# Write an algorithm that reads the code of the item ordered,
# the quantity and calculates the amount to be paid for that snack Consider that for each run, only one item will be calculated

# Description Code Price
# Cachorro Quente 100 1.20
# Bauru Simples 101 1.30
# Bauru com Ovo 102 1.50
# Hambúrguer 103 1.20
# Cheeseburguer 104 1.30
# Refrigerante 105 1.00


# use a dictionary to store the prices
prices = {
    100: 1.20,
    101: 1.30,
    102: 1.50,
    103: 1.20,
    104: 1.30,
    105: 1.00
}

code = int(input('Type the code of the item ordered: '))
quantity = int(input('Type the quantity of the item ordered: '))

# get the price of the item ordered
price = prices[code]

# calculate the total amount to be paid
total = price * quantity

print(f'The total amount to be paid is {total:.2f}')

#  Make a program to receive an integer number from the user and determine if this number is prime or not Prime
#

# read a number
number = int(input('Type a number: '))

# write a function to check if the number is prime
def is_prime(number):
    if number == 1:
        return False
    elif number == 2:
        return True
    else:
        for i in range(2, number):
            if number % i == 0:
                return False
        return True


# print the result
if is_prime(number):
    print('The number is prime')
else:
    print('The number is not prime')# Make a program to find all evens between 1 and 1004
# use list comprehension

# print the result
print([i for i in range(1, 1004) if i % 2 == 0])
# Make an algorithm that counts from 1 to 100
# and for every multiple of 10 emits a message: “Multiple of 10”

for i in range(1, 101):
    if i % 10 == 0:
        print('Multiple of 10')#  Write a program that displays on the screen all numbers between 83 and 108 that are divisible by 9
# use list comprehension

# print the result
print([i for i in range(83, 109) if i % 9 == 0])# Read 2 values, calculate and write the sum of the integers between the 2 values ​​read (including the values ​​read in the sum)
# Consider that the second value read will always be greater than the first value

# read the first value
first_value = int(input('Type the first value: '))
# read the second value
second_value = int(input('Type the second value: '))
# initialize the sum variable
sum = 0
# iterate over the range of values ​​between the first and second values
for i in range(first_value, second_value + 1):
    # sum the values ​​in the variable
    sum += i
# print the result
print(f'The sum of the values ​​between {first_value} and {second_value} is {sum}')#  A survey was carried out among the inhabitants of a region Data on age, sex (M/F) and salary were collected and informs:
#  a) the average salary of the group; b) number of women earning up to R$150000

survey_results = []

for i in range(0, 5):
    [s, salary] = input().split(' ')[:2]
    survey_results.append((s, float(salary)))

# find the average value in a array of tuples

average_salary = sum([x[1] for x in survey_results]) / len(survey_results)

print('Average salary: R$ {:.2f}'.format(average_salary))

# count number of values in a array of tuples that match a condition (salary <= 150000)
# and are of a specific type (F)

number_of_womans = len([x for x in survey_results if x[0] == 'F' and x[1] >= 150000])

print('Number of womans earning more than 150000: {}'.format(number_of_womans))#  Read two numbers and print all numbers between them Suppose the second number is greater than the first
# 

# read the two numbers
a, b = input().split(' ')[:2]

# convert to int
a = int(a)
b = int(b)

# print all numbers between a and b
for i in range(a + 1, b):
    print(i)
#  Read 5 ages and average the ages (use a variable for age)

# read the ages
ages = []
for i in range(0, 5):
    age = int(input())
    ages.append(age)

# calculate the average
average_age = sum(ages) / len(ages)

# print the average
print('Average age: {:.2f}'.format(average_age))
#  Print the square of the numbers 1 through 20

for i in range(1, 21):
    print(i ** 2)
    #  Create an algorithm that prints even numbers in the range 1 to 600
# use list comprehension

# print the even numbers
print([x for x in range(1, 601) if x % 2 == 0])#  Create an algorithm that prints all numbers from 11 to 89 and their sum

# print the numbers
for i in range(11, 90):
    print(i)

# print the sum
print(sum(range(11, 90)))

#  Create an algorithm that prints the sum of even numbers between 25 and 200

# print the sum of even numbers
print(sum([x for x in range(25, 201) if x % 2 == 0]))#  Read 10 numbers and print how many are even and how many are odd

# read the 10 numbers
numbers = input().split(' ')[:10]

# convert to int
numbers = [int(x) for x in numbers]

# count the even and odd numbers
even = 0
odd = 0

for number in numbers:
    if number % 2 == 0:
        even += 1
    else:
        odd += 1

# print the results
print('Even numbers: {}'.format(even))
print('Odd numbers: {}'.format(odd))
#  Enter 15 numbers and print how many numbers greater than 30 have been entered

# read the 15 numbers
numbers = input().split(' ')[:15]

# convert to int
numbers = [int(x) for x in numbers]

# count the numbers greater than 30
count = 0

for number in numbers:
    if number > 30:
        count += 1

# print the result
print('Numbers greater than 30: {}'.format(count))#  Enter 20 numbers and print the sum of the positives and the total of the negatives

# read the 20 numbers
numbers = input().split(' ')[:20]

# convert to int
numbers = [int(x) for x in numbers]

# count the positive and negative numbers
positive = 0
negative = 0

for number in numbers:
    if number > 0:
        positive += number
    else:
        negative + 1


# print the results
print('Sum of the positives: {}'.format(positive))
print('Total of the negatives: {}'.format(negative))#  Read multiple numbers and report how many numbers between 100 and 200 were entered When the value 0 (zero) is read, the algorithm must stop executing

# read the numbers using while loop
numbers = []
number = int(input())
while number != 0:
    numbers.append(number)
    number = int(input())

# count the numbers between 100 and 200
count = 0
for number in numbers:
    if 100 < number < 200:
        count += 1

# print the result
print('Numbers between 100 and 200: {}'.format(count))#  Chico is 150m tall and grows 2 centimeters a year, while Juca is 110 m tall and grows 3 centimeters a year Build an algorithm that calculates and prints how many years it will take for Juca to be higher than Chico


# read the initial heights
chico_height = 150
juca_height = 110

# read the growth rate
chico_growth = 2
juca_growth = 3

# calculate the years
years = 0
while chico_height >= juca_height:
    chico_height += chico_growth
    juca_height += juca_growth
    years += 1

# print the result
print('Years: {}'.format(years))#  Create a vector with 5 integer positions and display the product of all values

# create a vector
from functools import reduce


vector = [1, 2, 3, 4, 5]

# print the product of all values
print(reduce(lambda x, y: x * y, vector))
#  Fill a vector with 10 real values ​​and display all values ​​above 100


# read a vector with 10 real values
vector = [float(x) for x in input().split(' ')[:10]]

# print the values above 100
for value in vector:
    if value > 100:
        print(value)
# 21 Enter a positive integer and display the factorial of this number, remembering that 0! = 1 Example: 5! = 5x4x3x2x1 = 120 Vectors

# read a number
number = int(input())

# calculate the factorial
factorial = 1
for i in range(1, number + 1):
    factorial *= i  


# print the result
print('Factorial of {}: {}'.format(number, factorial))
#  Read a vector containing the grades of a class of 10 students Calculate the class average and count how many students scored above this calculated average Write the class average and the counting result

# read the grades
grades = [float(x) for x in input().split(' ')[:10]]

# calculate the average
average = sum(grades) / len(grades)

# count the students above the average
count = 0

for grade in grades:
    if grade > average:
        count += 1

# print the results
print('Class average: {}'.format(average))
print('Students above the average: {}'.format(count))
#  Read a 6-element vector A containing the Mega Sena template Next, read a 10-element vector B containing a bet Write down how many points the bettor scored, and whether he scored the sena (6 hits), the corner (5 hits) or the quad (4 hits)

# read the template
template = [int(x) for x in input().split(' ')[:6]]

# read the bet

bet = [int(x) for x in input().split(' ')[:10]]

# count the hits

hits = 0

for number in bet:
    if number in template:
        hits += 1

# print the results

print('Hits: {}'.format(hits))#  Read an integer value (only accept values ​​between 1 and 10) and write the multiplication table from 1 to 10 of the read value

# read the number
number = int(input())


if number < 1 or number > 10:
    print('Invalid number')
    exit()

# print the multiplication table
for i in range(1, 11):
    print('{} x {} = {}'.format(number, i, number * i))
